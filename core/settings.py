"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from corsheaders.defaults import default_headers
from datetime import timedelta
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-q3!o1#$1u)($dj983*cck46_)9v85#m@_&tccj1-d0(iiy+o08'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'detipcompany141.pythonanywhere.com']

# Application definition

INSTALLED_APPS = [
    "corsheaders",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "app",
    "django_filters",
    "rest_framework_simplejwt",
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
    ],
}

# EMAIL CONFIGURACIÓN PARA PRODUCCIÓN CON HOSTINGER (SSL)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.hostinger.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'info@detipcompany.com'
EMAIL_HOST_PASSWORD = 'Felipe.7361697'   # ⚠️ ¡Cámbiala por una variable de entorno en producción!
EMAIL_USE_SSL = True
DEFAULT_FROM_EMAIL = 'info@detipcompany.com'

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# CORS CONFIGURACIÓN PARA DEV
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",        # frontend local dev
    "http://127.0.0.1:3000",        # por si usas esta IP
]
CORS_ALLOW_ALL_ORIGINS = True  # ⚠️ Solo para desarrollo local, no producción
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = list(default_headers) + [
    'access-control-allow-origin',
]
CORS_ALLOW_METHODS = ["*"]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'

# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'es-ve'  # Cambia a 'es-co' o 'es-es' si tu público es hispano
TIME_ZONE = 'America/Caracas'    # Cambia a 'America/Bogota' o tu zona

USE_I18N = True
USE_TZ = True

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Permitir transporte inseguro (solo en desarrollo local con DEBUG=True)
if DEBUG:
    os.environ['OAUTHLIB_INSECURE_TRANSPORT'] = '1'
    
# 🔑 Indicarle a Django que use CustomUser como modelo principal de usuario
AUTH_USER_MODEL = "app.CustomUser"

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=2),   # duración del access token (ej: 2 horas)
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),   # duración del refresh token (ej: 7 días)
    "ROTATE_REFRESH_TOKENS": False,                # genera un nuevo refresh al usarlo
    "BLACKLIST_AFTER_ROTATION": True,              # invalida el refresh usado si lo rotas
    "UPDATE_LAST_LOGIN": True,
}